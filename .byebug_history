exit
c
self
user
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0").where("objective_students.points_all_time BETWEEN 6 AND 9")
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0").count
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0")
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).count
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id)
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id)
Objective.joins(objective_seminars: :seminar, objective_students: :user)
continue
c
exit
student.teach_options(@seminar)
student.teach_request_in(@seminar)
student
@consultancy
c
@consultancy.teams
@consultancy
c
params
c
params
c
@objective_10
mainassign
@assign_to_add
c
exit
params_to_use
exit
@objective
c
params
@objective
exit
@objective
c
@objective
c
exit
params[:objective]
params
c
params
@objective
exit
puts page.body
exit
@new_objective.topic
misc_topic
c
@bad_objective.valid?
@bad_objective
@bad_objectiv
c
@objective_10
c
exit
@assign_to_add.reload.topic
@assign_to_add.topic
c
@assign_to_add.topic
c
@assign_to_add.topic
@assign_to_add
c
@assign_to_add.topic
@assign_to_add.topics
@assign_to_add
c
self.topic
exit
self.topic
self
c
exit
self.labels.first.topics
self.labels.first
self.labels
self.label
self.topics
self
c
lab.topics
lab = Label.last
exit
c
lab.topics
lab = Label.last
exit
c
self
lab.topics
lab = Label.last
c
lab.topics
lab = Label.last
c
self.topic
self.topics
elf.topics
self
topic
c
puts page.body
c
puts page.body
c
exit
@quiz
c
ripostes.where(:graded => 0)
ripostes.count
exit
riposte
c
exit
@other_l_priv
labels_list.include?(l1)
l1 = Label.find(411104511)
labels_list
Label.find(411104511)
c
@other_l_priv
exit
@admin_l
@other_l_priv
exit
@other_l_priv
exit
x
c
@grade_type
@style
check_message[:"#{@style}"][:"#{@grade_type}"]
c
@question
@question.update(:label_id => 781036308)
@question.update(:label => 781036308)
params["questions"]["0"][:label]
Label.find(@question.label_id)
@question.label_id
params["questions"]["0"]
@question.label
@question
@question.update_attributes(multi_params(params["questions"]["0"]))
Label.find(781036308)
params
c
puts page.body
c
@admin_l.topics
@admin_l
c
params
c
params
c
params
c
params[:questions]["0"]
params[:questions][0]
params[:questions]
params
c
x
params
c
params
@question
exit
@question
@question.update_attributes(multi_params(params["questions"]["0"]))
params
c
default_label.topics
default_label
default_lab
c
params
param
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
default_label
exit
c
lowest_layer
c
params
c
params
c
params
c
@label.topic_ids
c
params[:label][:topic_ids]
@label.topic_ids
@label
Topic.find(664908689)
params
c
params
c
params
c
puts page.body
c
params
exit
params
c
@label.topic_ids
@label.topics
@label
c
Label.select{|x| x.topics.count > 0 }
Label.select{|x| x.topics.count == 0 }
Label.count
@user_l.topics
c
@admin_l.topics
@admin_l.topics.delete(t1)
@admin_l.topics.delete(d1)
t1 = @admin_l.topics.first
@admin_l.topics
@admin_l.topics.first.destroy
@admin_l.topics
@admin_l.topics.first.delete
LabelTopic.count
LabelsTopic.count
@admin_l.topics
@admin_l
exit
@admin_l.labels_topics.first.delete
@admin_l.labels_topics.first.destroy
@admin_l.labels_topics.first
@admin_l.labels_topics.count
@admin_l.labels_topics
