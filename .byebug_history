exit
c
puts page.body
c
puts page.body
c
current_user
exit
controller_name
c
puts page.body
c
puts page.body
c
puts page.body
c
continue
ccei
c
puts page.body
c
puts page.body
exit
object.user == current_user
object.try(:user)
!object.try(:user)
current_user&.type
current_user
object
c
object
exit
object
c
puts page.body
c
puts page.body
exit
puts page.body
c
puts page.body
c
puts page.body
c
put page.body
c
puts page.body
c
puts page.body
c
exit
ObjectiveStudent.find_by(:objective => other_obj, :user => @student_1)
other_obj
exit
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).count
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id)
            .where("objective_seminars.seminar_id = ?", seminar.id)
Objective.joins(objective_seminars: :seminar, objective_students: :user)
c
exit
Objective.joins(objective_seminars: :seminar, objective_students: :user).count
Objective.joins(objective_seminars: :seminar, objective_students: :user)
self
Objective
c
exit
team.user_ids
team
team[:user_ids]
SeminarStudent.where(:user => team[:user_ids]).count
SeminarStudent.where(:user => team[:user_ids])
team
c
puts page.body
c
exit
@teams.count
@teams
group[2]
group[1]
group[0]
group
c
@seminar
c
@newest_consult.created_at
@newest_consult
exit
Time.now
@seminar.consultancies[1].created_at
@seminar.consultancies[0].created_at
c
exit
Consultancy.count
consult_count
Consultancy.last.created_at
Consultancy.last
exit
@seminar.consultancies[0].created_at
date
c
@seminar.consultancies[1].created_at
@seminar.consultancies[0].created_at
@seminar.consultancies.count
@seminar.consultancies
c
old_consult
exit
this_obj
this_id
exit
ObjectiveStudent.where(:user => stud)[3]
ObjectiveStudent.where(:user => stud)[2]
ObjectiveStudent.where(:user => stud)[1]
ObjectiveStudent.where(:user => stud)[0]
ObjectiveStudent.where(:user => stud)
stud
c
@teams
c
@teams
c
@teams[1]
@teams
this_team
this_team["objective_id"]
this_team.objective_id
this_team[:objective_id]
this_team
c
@teams[0].consultant_id
@teams[0][:consultant_id]
@teams[0][:consultant]
@teams[0][consultant]
@teams[0].consultant
@teams[0]
c
@teams
exit
@question
@grade_type
checkery
exit
checkery
exit
current_user
exit
@teacher.save
current_user
@teacher
exit
user_id
c
session[:user_id]
session
user_id
exit
c
exit
c
exit
c
params
exit
c
Quiz.all[-2]
Quiz.all[-1]
@quiz
c
@riposte
c
@riposte
c
Quiz.all[-1]
@quiz
@riposte
c
Quiz.all[-2]
Quiz.all[-1]
Quiz.count
@quiz
c
@riposte
c
@riposte
c
Quiz.count
@quiz
@qiuz
exit
Quiz.count
exit
@riposte.quizzes.order(:created_at).last
@riposte.quizzes.last
@riposte.quizzes.count
@riposte.quizzes
@riposte = Riposte.find(this_id)
this_id = current_path[/\d+/].to_i
puts page.body
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
@quiz.ripostes.order(:position).last
c
@quiz.ripostes.order(:position).last
@riposte
exit
c
puts page.body
c
puts page.body
c
teacher_graded_tags.present?
c
teacher_graded_tags.present?
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
c
@question.label
@question = @riposte.question
@riposte = Riposte.find(this_id)
this_id = current_path[/\d+/].to_i
teacher_graded_tags.present?
c
teacher_graded_tags.present?
