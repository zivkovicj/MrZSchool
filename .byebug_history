c
puts page.body
c
exit
@quiz
c
ripostes.where(:graded => 0)
ripostes.count
exit
riposte
c
exit
@other_l_priv
labels_list.include?(l1)
l1 = Label.find(411104511)
labels_list
Label.find(411104511)
c
@other_l_priv
exit
@admin_l
@other_l_priv
exit
@other_l_priv
exit
x
c
@grade_type
@style
check_message[:"#{@style}"][:"#{@grade_type}"]
c
@question
@question.update(:label_id => 781036308)
@question.update(:label => 781036308)
params["questions"]["0"][:label]
Label.find(@question.label_id)
@question.label_id
params["questions"]["0"]
@question.label
@question
@question.update_attributes(multi_params(params["questions"]["0"]))
Label.find(781036308)
params
c
puts page.body
c
@admin_l.topics
@admin_l
c
params
c
params
c
params
c
params[:questions]["0"]
params[:questions][0]
params[:questions]
params
c
x
params
c
params
@question
exit
@question
@question.update_attributes(multi_params(params["questions"]["0"]))
params
c
default_label.topics
default_label
default_lab
c
params
param
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
c
topic.labels
topic
default_label
exit
c
lowest_layer
c
params
c
params
c
params
c
@label.topic_ids
c
params[:label][:topic_ids]
@label.topic_ids
@label
Topic.find(664908689)
params
c
params
c
params
c
puts page.body
c
params
exit
params
c
@label.topic_ids
@label.topics
@label
c
Label.select{|x| x.topics.count > 0 }
Label.select{|x| x.topics.count == 0 }
Label.count
@user_l.topics
c
@admin_l.topics
@admin_l.topics.delete(t1)
@admin_l.topics.delete(d1)
t1 = @admin_l.topics.first
@admin_l.topics
@admin_l.topics.first.destroy
@admin_l.topics
@admin_l.topics.first.delete
LabelTopic.count
LabelsTopic.count
@admin_l.topics
@admin_l
exit
@admin_l.labels_topics.first.delete
@admin_l.labels_topics.first.destroy
@admin_l.labels_topics.first
@admin_l.labels_topics.count
@admin_l.labels_topics
@admin_l.labelstopics
exit
EXIT
c
params
c
params
exit
LabelsTopic.all[-1].topic
LabelsTopic.all[-1].label
LabelsTopic.all[-1]
LabelsTopi.all[-1]
LabelsTopic.count
Topic.all[2].labels
Topic.all[2]
Topic.all[1]
Topic.all[0]
Topic.all[]
Topic.count
l1.topics
l1 = Label.all[0]
Label.all[0]
Label.all[1]
Label.count
exit
lab
c
lab
c
lab
c
lab
c
lab
c
lab
checkery
default_label
exit
params
exit
default_label
exit
controller_name
controller_nam
c
topic.labels
topic
exit
Topic.first.labels
Topic.first
topic.labels
topic
c
params
c
puts page.body
exit
Topic.all[1]
Topic.all[0]
Topic[0]
Topic.count
first_topic
puts page.body
c
params
exit
params
c
first_topic
puts page.body
c
exit
@style
exit
stud_answer
c
@question
c
@question
@question.update_attributes(multi_params(params["questions"]["0"]))
if @question.update_attributes(multi_params(params["questions"]["0"]))
@question.extent = params[:extent]
@question = Question.find(params[:id])
@question.extent = params[:extent]
params[:extent]
params
c
@extent=="private"
@extent=="public"
c
@extent
exit
@extent
exit
params
@question.errors
@question.update_attributes(multi_params(params["questions"]["0"]))
c
params
exit
@new_question_2
@new_questions_2
@new_question
c
@new_question
c
this_choice
