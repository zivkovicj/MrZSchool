c
exit
params
exit
quizzes_to_grade
c
which_quiz_pic
c
which_quiz_pic
exit
c
z[1]
z
exit
@seminar
c
self.ripostes[0]
summed_score
self
c
total_percentage(summed_score)
summed_score
self
c
self
new_needs_grading
summed_score
current_user
c
exit
@quiz_2.ripostes[3]
@quiz_2.ripostes[2]
@quiz_2.ripostes[1]
@quiz_2.ripostes[0]
c
new_tally
exit
value.to_i/10
new_tally
value
c
value
c
new_tally
value
c
new_tally
value
c
value
exit
c
@quiz
c
@quiz
c
@quiz
c
@quiz
exit
params
exit
@riposte
c
@riposte
c
params
exit
c
@riposte
c
value
@riposte
c
value
@riposte
exit
@riposte
c
params
c
params
exit
params
exit
puts page.body
c
@seminar
puts page.body
exit
puts page.body
c
@teacher.seminar_teachers.where(:accepted => true).map(&:seminar).sort_by(&:name)
@teacher.seminar_teachers.where(:accepted => true).map(&:seminar)
@teacher.seminar_teachers.where(:accepted => true)
c
puts page.body
exit
seminar
c
exit
@quiz.possible_after_teacher_score
@quiz.possible_after_teacher_score.sum(:poss)
c
@quiz.possible_after_teacher_score.sum(:poss)
@quiz.possible_after_teacher_score
Riposte.count
exit
Riposte.count
@quiz.possible_after_teacher_score
c
@quiz.possible_after_teacher_score
exit
@quiz.possible_after_teacher_score
c
@quiz.possible_after_teacher_score
c
@quiz.possible_after_teacher_score
exit
@quiz
@quiz.ripostes.last
c
@quiz
c
@quiz
exit
puts page.body
exit
Riposte.last
exit
Riposte.last
exit
Riposte.last.graded
Riposte.last
exit
Question.last
exit
Question.all[0]
Question[0]
exit
c
these_options.include?(mainassign)
these_options.nil?
exit
c
these_objs.count
self.objective_students.where(:ready => true).count
self.objective_students.where(:ready => true)
self.objective_students.count
these_objs.count
c
self.objective_students.where(:ready => true).count
self.objective_students.where(:ready => true)
self.objective_students[1]
self.objective_students.count
self
these_objs.count
these_objs
exit
c
these_objs.count
these_objs
c
these_objs
c
these_objs
exit
these_objs
c
seminar.objectives.count
seminar
these_objs.count
these_objs
c
these_objs.count
these_objs
exit
these_objs.count
these_objs
exit
these_objs.count
c
these_objs.count
these_objs
exit
these_objs.count
these_objs
c
these_objs.count
these_objs
c
these_objs.count
exit
these_objs[-1]
these_objs[0]
ObjectiveSeminar.count
Objective.count
these_objs.count
these_objs
exit
these_objs.count
these_objs
c
these_objs.count
these_objs
exit
these_objs.count
these_objs
exit
these_objs
c
these_objs
exit
@seminars.order(:name)
@seminars.first
exit
c
@seminars
c
@seminars
c
puts page.body
c
puts page.body
c
@other_teacher.seminars.count
@other_teachcer.seminars.count
exit
@seminars.count
c
@seminars.count
c
@seminars.count
c
@seminar
@st_2.seminar
@st_w.seminar
exit
puts page.body
c
puts page.body
exit
puts page.body
exit
pic.errors
pic.valid?
exit
list_for_checks
list_for_checks.include?(Label.last)
list_for_checks.count
c
puts page.body
c
@labels.include?(Label.last)
Label.last
@new_label
