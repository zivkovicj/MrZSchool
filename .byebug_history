c
@objectives.count
c
@objectives.count
c
@objectives.count
c
@objectives.count
exit
eixt
@objectives.count
c
@objectives.count
c
@objectives.count
exit
@objectives
c
@objectives.count
@objectives
exit
Objective.where(:extent => "public").count
Objective.where(:extent => "public")
puts page.body
exit
puts page.body
@priv_obj
@objectives
c
@objectives.include?(obj)
@seminar.objectives.include?(obj)
obj = Objective.find_by(:name => "flagellates")
c
exit
@seminar.objectives.include?(obj)
obj = Objective.find_by(:name => "flagellates")
c
exit
this.include?(obj)
this = @seminar.objectives
@objectives.include?(obj)
@objectives
obj = Objective.find_by(:name => "flagellates")
c
@priv_obj
@objectives
c
exit
puts page.body
@objectives
c
@objectives.include?(this_obj)
@objectives.count
@objectives
this_obj
this_obj = Objective.where(:extent => "private").where.not(:user => current_user).first
this_obj = Objective.where(:extent => "private").where.not(:user => current_user)
Objective.where(:extent => "private").where.not(:user => current_user)
Objective.where(:user => current_user).count
Objective.where(:extent => "private").count
Objective.where(:extent => "public").count
Objective.count
current_user
@teacher_1
@priv_obj
exit
c
Field.all[0].domains
Field.all[0]
exit
Domain.all[1].field
Domain.all[1]
Domain.all[0].field
Domain.all[0]
Field.all[0].domains
Field.all[0]
Topic.all[6]
Topic.all[5]
Topic.all[4]
Topic.all[3]
Topic.all[2]
Topic.all[1]
Topic.all[0]
c
Field.all[3]
Field.all[2]
Field.all[1]
Field.all[0]
Field.find(174056382)
Field.find(174056382
first_topic.domain.field
first_topic.domain
first_topic
c
Field.all[0].domains
Field.all[0]
Field.all.count
first_topic.domain.field
first_topic.domain
first_topic
c
first_topic.domain.field
first_topic.domain
first_topic
c
prof_list_still_needed.include?(@c_stud_10)
prof_list_still_needed.count
@consultancy.teams.count
student
c
student
c
student
c
student
c
student
exit
@c_stud_10
student
c
@c_stud_9
@c_stud_10
prof_list_still_needed.count
prof_list_still_needed
c
student
c
student
c
student
c
student
@c_stud_9
@c_stud_10
@consultancy.teams.count
team1.users.count
team1.users
team1 = Team.all.detect{|x| x.users.include?(q)}
Team.all.detect{|x| x.users.include?(q)}
Team.detect{|x| x.users.include?(q)}
@consultancy.users.include?(q)
q = Student.find_by(:first_name => "Q")
c
student
c
prof_list_still_needed.count
prof_list_still_needed
@c_stud_10
@consultancy
c
@consultancy.users.count
@consultancy.users.include?(@c_stud_10)
@c_stud_10
exit
@consultancy.users.include?(johnson)
@consultancy.users.count
johnson = Student.find_by(:first_name => "Johnson")
@consultancy.teams.count
@consutancy.teams.count
c
@consultancy.users.include?(johnson)
@consultancy.users.count
@consultancy.students.count
johnson = Student.find_by(:first_name => "Johnson")
@consultancy.teams.count
c
become_need_hash
exit
become_need_hash
exit
obj_sem.students_needed
obj_sem = ObjectiveSeminar.find_by(:objective => obj, :seminar => @seminar)
obj = Objective.find(3)
obj = Objective.find(2)
obj = Objective.find(1)
obj = Objective.find(0)
become_need_hash
exit
@need_hash
student
exit
student
studentstudent
exit
c
self
user
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0").where("objective_students.points_all_time BETWEEN 6 AND 9")
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0").count
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).where("objective_seminars.priority > 0")
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id).count
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id).where("objective_students.user_id = ?", self.id)
Objective.joins(objective_seminars: :seminar, objective_students: :user).where("objective_seminars.seminar_id = ?", seminar.id)
Objective.joins(objective_seminars: :seminar, objective_students: :user)
continue
c
exit
student.teach_options(@seminar)
student.teach_request_in(@seminar)
student
@consultancy
c
@consultancy.teams
@consultancy
c
params
c
params
c
@objective_10
mainassign
@assign_to_add
c
exit
params_to_use
exit
@objective
c
params
@objective
exit
@objective
c
@objective
c
exit
params[:objective]
params
c
params
@objective
exit
puts page.body
exit
@new_objective.topic
misc_topic
c
@bad_objective.valid?
@bad_objective
@bad_objectiv
c
@objective_10
c
exit
@assign_to_add.reload.topic
@assign_to_add.topic
c
@assign_to_add.topic
c
@assign_to_add.topic
@assign_to_add
c
@assign_to_add.topic
@assign_to_add.topics
@assign_to_add
