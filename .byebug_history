exit
this_length
exit
c
these_choices
this_order
exit
c
@question.choices.length
@question.choices
this_order
exit
[*0..6]
this_order
[0...6]
[0..6]
@question.choices.length
@question.choices
c
@riposte
c
@stud_answer
params
exit
riposte_1
exit
@riposte.stud_answer[0] == answer_text
@riposte.stud_answer == answer_text
answer_text
@riposte.stud_answer
should_select
answer_text
c
answer_text
@riposte
@riposte.stud_answer
exit
c
@riposte
@riposte.stud_answer
should_select
answer_text
c
answer_text
c
answer_text
c
answer_text
c
answer_text
c
answer_text
c
answer_text
@riposte.stud_answer
exit
should_select
exit
c
@question.choices[3] == practice_answer
@question.choices[3] = practice_answer
@question.choices[3]
@question.choices[4]
@question.choices
this_order[0] == practice_answer.to_i
this_order[0] == practice_answer
practice_answer = ["3"]
practice_answer = 3
@riposte.stud_answer
@riposte[:stud_answer]
riposte[stud_answer]
this_order[0]
this_order
X
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
c
@riposte
exit
@riposte
c
@riposte
c
continue
ie
c
fixed_response
c
correct_array_fixed
@class_type
fixed_response
exit
response
fixed_response
c
continue
exit
@question.label.grade_type
exit
@question.label
@question
exit
@riposte.question
@riposte
params
c
puts page.body
c
@riposte = Riposte.find(params[:id])
c
@riposte = Riposte.find(params[:id])
c
puts page.body
c
puts page.body
c
puts page.body
c
@finished
c
@finished
exit
@finished
c
@finished.to_s
@finished
c
params[:finished]
params
@finished
exit
params
c
params
exit
this_stud_ans
these_corr_ans
c
exit
[these_corr_ans - this_stud_ans]
exit
[these_corr_ans-this_stud_ans].empty?
[these_corr_ans-this_stud_ans].any?
these_corr_ans-this_stud_ans.any?
these_corr_ans-this_stud_ans
this_stud_ans
these_corr_ans
c
riposte.question
riposte
exit
@grade_type
@style
c
perc
stud_answer
c
perc
stud_answer
stud_asnwer
c
puts page.body
c
puts page.body
c
riposte
exit
riposte.stud_answer.first
riposte.stud_answer
riposte
c
correct_count
perc
exit
c
@riposte
c
@riposte
@riposte.poss
@ripste
@ripsote.poss
(backend_answer & correct_array).length
correct_array
backend_answer
correct_count
c
params[:riposte][:stud_answer].to_f
exit
params[:riposte][:stud_answer].to_i
params[:riposte][:stud_answer]
params[:riposte]
params
c
@objective.questions
exit
eit
@objective.questions
@objective
c
puts page.body
c
puts page.body
exit
interval_objective
exit
c
correct_array
c
correct_array
this_answer
these_params
exit
correct_num
correct_array
c
correct_array
this_answer
c
these_params
exit
these_params
exit
these_params
c
these_params
c
these_params
c
these_params["is_correct"]
these_params
exit
these_params
these_params["is_correct"]
c
these_params
c
these_params
c
exit
